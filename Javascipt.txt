// Gestion des écrans et interactions - JS vanilla simple

// Variables de progression (niveaux doux)
let currentModule = null;
let completedModules = 0;
const totalModules = 5; // Couleurs, animaux, formes, salutations, jeu

// Contenu des modules (adapte ici pour ajouter plus de vocabulaire)
const modulesData = {
    colors: [
        { name: 'red', audio: 'red-audio', animation: 'balloon', img: 'icons/red-balloon.png' },
        { name: 'blue', audio: 'blue-audio', animation: 'balloon', img: 'icons/blue-balloon.png' },
        { name: 'green', audio: 'green-audio', animation: 'balloon', img: 'icons/green-balloon.png' }
    ],
    animals: [
        { name: 'dog', audio: 'dog-audio', animation: 'jump', img: 'icons/dog.png' },
        { name: 'cat', audio: 'cat-audio', animation: 'jump', img: 'icons/cat.png' },
        { name: 'bird', audio: 'bird-audio', animation: 'fly', img: 'icons/bird.png' }
    ],
    shapes: [
        { name: 'circle', audio: 'circle-audio', animation: 'transform', img: 'icons/circle.png' }, // Se transforme en ballon
        { name: 'square', audio: 'square-audio', animation: 'transform', img: 'icons/square.png' } // Se transforme en maison
    ],
    greetings: [
        { name: 'hello', audio: 'hello-audio', animation: 'wave', img: 'icons/hello.png' },
        { name: 'bye-bye', audio: 'bye-audio', animation: 'wave', img: 'icons/bye.png' }
    ],
    game: [] // Jeu spécial : Géré séparément
};

// Fonction pour changer d'écran
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => screen.classList.remove('active'));
    document.getElementById(screenId).classList.add('active');
}

// Écran d'accueil : Animation et start
document.addEventListener('DOMContentLoaded', () => {
    const helloAudio = document.getElementById('hello-audio');
    helloAudio.play(); // Dit "Hello!" au chargement
    document.getElementById('start-btn').addEventListener('touchstart', () => {
        showScreen('modules-screen');
    });
});

// Mode parent
document.getElementById('parent-btn').addEventListener('touchstart', () => {
    document.getElementById('parent-mode').style.display = 'flex';
});
document.getElementById('close-parent').addEventListener('touchstart', () => {
    document.getElementById('parent-mode').style.display = 'none';
});

// Sélection de module
document.querySelectorAll('.module-btn').forEach(btn => {
    btn.addEventListener('touchstart', () => {
        currentModule = btn.dataset.module;
        loadModule(currentModule);
        showScreen('module-content');
    });
});

// Chargement d'un module
function loadModule(module) {
    const container = document.getElementById('items-container');
    container.innerHTML = ''; // Vide
    if (module === 'game') {
        loadGame();
        return;
    }
    modulesData[module].forEach(item => {
        const div = document.createElement('div');
        div.classList.add('item');
        div.dataset.type = item.name;
        div.style.backgroundImage = `url(${item.img})`; // Image colorée
        div.addEventListener('touchstart', () => {
            const audio = document.getElementById(item.audio);
            audio.play(); // Prononce le mot + son
            // Animation CSS (ajoute class pour animation spécifique)
            div.classList.add(item.animation);
            setTimeout(() => div.classList.remove(item.animation), 1000);
            // Feedback positif
            const clap = document.getElementById('clap-audio');
            setTimeout(() => clap.play(), 500); // Applaudissements après
        });
        container.appendChild(div);
    });
}

// Jeu simple : Associe image à son (ex: touche le dog quand on dit "dog")
function loadGame() {
    const container = document.getElementById('items-container');
    const animals = modulesData.animals; // Réutilise les animaux
    const randomAnimal = animals[Math.floor(Math.random() * animals.length)];
    // Joue le son d'abord
    const audio = document.getElementById(randomAnimal.audio);
    audio.play();
    // Affiche tous les animaux
    animals.forEach(animal => {
        const div = document.createElement('div');
        div.classList.add('item');
        div.style.backgroundImage = `url(${animal.img})`;
        div.addEventListener('touchstart', () => {
            if (animal.name === randomAnimal.name) {
                // Correct : Feedback positif
                const clap = document.getElementById('clap-audio');
                clap.play();
                div.classList.add('correct'); // Ajoute animation CSS (défini dans CSS si besoin)
                setTimeout(() => completeModule(), 1000);
            } else {
                // Incorrect : Son doux négatif (ajoute un audio si voulu)
            }
        });
        container.appendChild(div);
    });
}

// Bouton retour
document.getElementById('back-btn').addEventListener('touchstart', () => {
    showScreen('modules-screen');
});

// Compléter un module et récompense
function completeModule() {
    completedModules++;
    showScreen('reward-screen');
    // Animation étoiles + stickers (simulé par CSS)
    const clap = document.getElementById('clap-audio');
    clap.play();
    document.getElementById('next-btn').addEventListener('touchstart', () => {
        if (completedModules >= totalModules) {
            showScreen('end-screen');
        } else {
            showScreen('modules-screen');
        }
    }, { once: true }); // Écouteur unique
}

// Écran de fin
document.getElementById('restart-btn').addEventListener('touchstart', () => {
    completedModules = 0;
    showScreen('home-screen');
});
document.getElementById('exit-btn').addEventListener('touchstart', () => {
    // Pas de vraie sortie sur web, mais joue bye-bye
    const byeAudio = document.getElementById('bye-audio');
    byeAudio.play();
    // Option : window.close() mais ne marche pas toujours
});

// Ajoute ici des animations JS si CSS ne suffit pas (ex. pour transformations de formes)
function transformShape(item) {
    // Exemple : Circle devient ballon
    if (item.name === 'circle') {
        setTimeout(() => {
            item.style.backgroundImage = 'url(icons/balloon.png)';
        }, 500);
    }
    // Appelle dans lイベント touch si besoin
}

// Pour ajouter des audios : Enregistre des MP3 avec une voix enfantine lente (ex. via Audacity). Place-les dans 'audio/'. Modifie les IDs si tu ajoutes plus.